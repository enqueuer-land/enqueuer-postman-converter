requisitions:
-   module: <<postman://postman_collection.json>>
    onFinish:
        assertions:
            -   expect: requisition.module.requisitions[0].subscriptions[0]
                toBeEqualTo:
                    name: 'Request Name - example'
                    type: http
                    method: POST
                    endpoint: endpoint
                    port: 8080
                    response:
                        headers:
                            header-response: header-response
                        status: 200
                        payload: "{\n    \"example\": \"response\"\n}"
            -   expect: requisition.module.requisitions[0].publishers[0]
                toBeEqualTo:
                    type: http
                    url: 'http://url.com/endpoint?param-key=param-value'
                    method: POST
                    payload: "{\n\t\"body\": true\n}"
                    headers:
                        header-key: header-value
                        Content-Type: application/json
                    authentication:
                        basic:
                            password: password
                            username: user
                    onInit:
                        script: 'preRequestScript = 3; secondline;'
                    onMessageReceived:
                        script: 'test[''value''] = 200;; test[''value''] = 300;'

-   import: <<postman://postman_collection2.json>>
    onFinish:
        script: |-
            publisher = requisition.requisitions[0].publishers[0];
        assertions:
            -   expect: requisition.name
                toBeEqualTo:  `Collection`
            -   expect: requisition.onInit.script
                toBeEqualTo:  `let onInit;`
            -   expect: store.google
                toBeEqualTo:  `google`
            -   expect: store.number
                toBeEqualTo:  `2`
            -   expect: requisition.requisitions.length
                toBeEqualTo: 1
            -   expect: requisition.requisitions[0].name
                toBeEqualTo: `Google`
            -   expect: publisher.url
                toBeEqualTo: `http://google.com.br`
            -   expect: publisher.method
                toBeEqualTo: `POST`
            -   expect: publisher.headers['header-key']
                toBeEqualTo: `header-value`
            -   expect: publisher.payload
                toBeEqualTo:
                    body: true
            -   expect: publisher.authentication
                toBeEqualTo:
                    basic:
                        password: password
                        username: user
